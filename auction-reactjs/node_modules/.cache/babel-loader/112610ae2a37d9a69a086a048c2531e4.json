{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios'; //`/api/1.0/users/${username}/hoaxes?page=` : '/api/1.0/hoaxes?page=';\n\nexport const useApiProgress = (apiMethod, apiPath, strictPath) => {\n  _s();\n\n  const [pendingApiCall, setPendingApiCall] = useState(false);\n  useEffect(() => {\n    let requestInterceptor, responseInterceptor;\n\n    const updateApiCallFor = (method, url, inProgress) => {\n      if (method !== apiMethod) {\n        return;\n      }\n\n      if (strictPath && url === apiPath) {\n        setPendingApiCall(inProgress);\n      } else if (!strictPath && url.startsWith(apiPath)) {\n        setPendingApiCall(inProgress);\n      }\n    };\n\n    const registerInterceptors = () => {\n      requestInterceptor = axios.interceptors.request.use(request => {\n        //url: \"/api/1.0/hoaxes?page=0\"\n        //url: \"/api/1.0/users/user1\"\n        //method: \"get\"\n        const {\n          url,\n          method\n        } = request;\n        updateApiCallFor(method, url, true);\n        return request;\n      });\n      responseInterceptor = axios.interceptors.response.use(response => {\n        const {\n          url,\n          method\n        } = response.config;\n        updateApiCallFor(method, url, false);\n        return response;\n      }, error => {\n        const {\n          url,\n          method\n        } = error.config;\n        updateApiCallFor(method, url, false);\n        throw error;\n      });\n    };\n\n    const unregisterInterceptors = () => {\n      //kaldırma işlemi\n      axios.interceptors.request.eject(requestInterceptor);\n      axios.interceptors.response.eject(responseInterceptor);\n    };\n\n    registerInterceptors();\n    return function unmount() {\n      unregisterInterceptors();\n    };\n  }, [apiPath, apiMethod, strictPath]);\n  return pendingApiCall;\n};\n\n_s(useApiProgress, \"dxeikoFXtsTGpF/7CQdkmajlavs=\");","map":{"version":3,"names":["useState","useEffect","axios","useApiProgress","apiMethod","apiPath","strictPath","pendingApiCall","setPendingApiCall","requestInterceptor","responseInterceptor","updateApiCallFor","method","url","inProgress","startsWith","registerInterceptors","interceptors","request","use","response","config","error","unregisterInterceptors","eject","unmount"],"sources":["C:/Users/bar1s/Desktop/AuctionProject/auction-reactjs/src/Shared/ApiProgress.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n//`/api/1.0/users/${username}/hoaxes?page=` : '/api/1.0/hoaxes?page=';\r\n\r\nexport const useApiProgress = (apiMethod, apiPath, strictPath) => {\r\n  const [pendingApiCall, setPendingApiCall] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let requestInterceptor, responseInterceptor;\r\n\r\n    const updateApiCallFor = (method, url, inProgress) => {\r\n      if (method !== apiMethod) {\r\n        return;\r\n      }\r\n      if (strictPath && url === apiPath) {\r\n        setPendingApiCall(inProgress);\r\n      } else if (!strictPath && url.startsWith(apiPath)) {\r\n        setPendingApiCall(inProgress);\r\n      }\r\n    };\r\n\r\n    const registerInterceptors = () => {\r\n      requestInterceptor = axios.interceptors.request.use(request => {\r\n\r\n        //url: \"/api/1.0/hoaxes?page=0\"\r\n        //url: \"/api/1.0/users/user1\"\r\n        //method: \"get\"\r\n        const { url, method } = request;\r\n        updateApiCallFor(method, url, true);\r\n        return request;\r\n      });\r\n\r\n      responseInterceptor = axios.interceptors.response.use(\r\n        response => {\r\n          const { url, method } = response.config;\r\n          updateApiCallFor(method, url, false);\r\n          return response;\r\n        },\r\n\r\n        error => {\r\n          const { url, method } = error.config;\r\n          updateApiCallFor(method, url, false);\r\n          throw error;\r\n        }\r\n      );\r\n    };\r\n\r\n    const unregisterInterceptors = () => { //kaldırma işlemi\r\n      axios.interceptors.request.eject(requestInterceptor);\r\n      axios.interceptors.response.eject(responseInterceptor);\r\n    };\r\n\r\n    registerInterceptors();\r\n\r\n    return function unmount() {\r\n      unregisterInterceptors();\r\n    };\r\n  }, [apiPath, apiMethod, strictPath]);\r\n\r\n\r\n  return pendingApiCall;\r\n};"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,UAArB,KAAoC;EAAA;;EAChE,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,KAAD,CAApD;EAEAC,SAAS,CAAC,MAAM;IACd,IAAIQ,kBAAJ,EAAwBC,mBAAxB;;IAEA,MAAMC,gBAAgB,GAAG,CAACC,MAAD,EAASC,GAAT,EAAcC,UAAd,KAA6B;MACpD,IAAIF,MAAM,KAAKR,SAAf,EAA0B;QACxB;MACD;;MACD,IAAIE,UAAU,IAAIO,GAAG,KAAKR,OAA1B,EAAmC;QACjCG,iBAAiB,CAACM,UAAD,CAAjB;MACD,CAFD,MAEO,IAAI,CAACR,UAAD,IAAeO,GAAG,CAACE,UAAJ,CAAeV,OAAf,CAAnB,EAA4C;QACjDG,iBAAiB,CAACM,UAAD,CAAjB;MACD;IACF,CATD;;IAWA,MAAME,oBAAoB,GAAG,MAAM;MACjCP,kBAAkB,GAAGP,KAAK,CAACe,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BD,OAAO,IAAI;QAE7D;QACA;QACA;QACA,MAAM;UAAEL,GAAF;UAAOD;QAAP,IAAkBM,OAAxB;QACAP,gBAAgB,CAACC,MAAD,EAASC,GAAT,EAAc,IAAd,CAAhB;QACA,OAAOK,OAAP;MACD,CARoB,CAArB;MAUAR,mBAAmB,GAAGR,KAAK,CAACe,YAAN,CAAmBG,QAAnB,CAA4BD,GAA5B,CACpBC,QAAQ,IAAI;QACV,MAAM;UAAEP,GAAF;UAAOD;QAAP,IAAkBQ,QAAQ,CAACC,MAAjC;QACAV,gBAAgB,CAACC,MAAD,EAASC,GAAT,EAAc,KAAd,CAAhB;QACA,OAAOO,QAAP;MACD,CALmB,EAOpBE,KAAK,IAAI;QACP,MAAM;UAAET,GAAF;UAAOD;QAAP,IAAkBU,KAAK,CAACD,MAA9B;QACAV,gBAAgB,CAACC,MAAD,EAASC,GAAT,EAAc,KAAd,CAAhB;QACA,MAAMS,KAAN;MACD,CAXmB,CAAtB;IAaD,CAxBD;;IA0BA,MAAMC,sBAAsB,GAAG,MAAM;MAAE;MACrCrB,KAAK,CAACe,YAAN,CAAmBC,OAAnB,CAA2BM,KAA3B,CAAiCf,kBAAjC;MACAP,KAAK,CAACe,YAAN,CAAmBG,QAAnB,CAA4BI,KAA5B,CAAkCd,mBAAlC;IACD,CAHD;;IAKAM,oBAAoB;IAEpB,OAAO,SAASS,OAAT,GAAmB;MACxBF,sBAAsB;IACvB,CAFD;EAGD,CAlDQ,EAkDN,CAAClB,OAAD,EAAUD,SAAV,EAAqBE,UAArB,CAlDM,CAAT;EAqDA,OAAOC,cAAP;AACD,CAzDM;;GAAMJ,c"},"metadata":{},"sourceType":"module"}